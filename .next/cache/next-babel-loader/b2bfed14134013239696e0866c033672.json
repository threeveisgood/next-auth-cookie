{"ast":null,"code":"import axios from 'axios';\nimport Router from 'next/router';\naxios.defaults.withCredentials = true;\nconst WINDOW_USER_SCRIPT_VARIABLE = '__USER__';\nexport const getUserScript = user => {\n  return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\n};\nexport const authInitialProps = isProtectedRoute => ({\n  req\n}) => {\n  const auth = req ? getServerSideToken(req) : getClientSideToken();\n  const user = auth.user;\n  const isAnonymous = !user || user.type !== \"authenticated\";\n\n  if (isProtectedRoute) {\n    return redirectUser();\n  }\n\n  return {\n    auth\n  };\n};\nexport const getServerSideToken = req => {\n  if (req === undefined) {\n    return {};\n  } else {\n    const {\n      signedCookies = {}\n    } = req;\n\n    if (!signedCookies) {\n      return {};\n    } else if (!signedCookies.token) {\n      return {};\n    }\n\n    return {\n      user: signedCookies.token\n    };\n  }\n};\nexport const getClientSideToken = () => {\n  if (false) {\n    const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {};\n    return {\n      user\n    };\n  }\n\n  return {\n    user: {}\n  };\n};\nexport const loginUser = async (email, password) => {\n  const {\n    data\n  } = await axios.post('/api/login', {\n    email,\n    password\n  });\n\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = data || {};\n  }\n};\nexport const logoutUser = async () => {\n  if (false) {\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\n  }\n\n  await axios.post(\"/api/logout\");\n  Router.push(\"/login\");\n};\nexport const getUserProfile = async () => {\n  const {\n    data\n  } = await axios.get('/api/profile');\n  return data;\n};","map":{"version":3,"sources":["E:/Coding/next-cookie-auth/lib/auth.js"],"names":["axios","Router","defaults","withCredentials","WINDOW_USER_SCRIPT_VARIABLE","getUserScript","user","JSON","stringify","authInitialProps","isProtectedRoute","req","auth","getServerSideToken","getClientSideToken","isAnonymous","type","redirectUser","undefined","signedCookies","token","window","loginUser","email","password","data","post","logoutUser","push","getUserProfile","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEAD,KAAK,CAACE,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,MAAMC,2BAA2B,GAAG,UAApC;AAEA,OAAO,MAAMC,aAAa,GAAGC,IAAI,IAAI;AACjC,SAAQ,GAAEF,2BAA4B,MAAKG,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAqB,GAAhE;AACD,CAFI;AAIL,OAAO,MAAMG,gBAAgB,GAAGC,gBAAgB,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAC/D,QAAMC,IAAI,GAAGD,GAAG,GAAGE,kBAAkB,CAACF,GAAD,CAArB,GAA6BG,kBAAkB,EAA/D;AACA,QAAMR,IAAI,GAAGM,IAAI,CAACN,IAAlB;AACA,QAAMS,WAAW,GAAG,CAACT,IAAD,IAASA,IAAI,CAACU,IAAL,KAAc,eAA3C;;AACA,MAAIN,gBAAJ,EAAsB;AACpB,WAAOO,YAAY,EAAnB;AACD;;AACD,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACD,CARM;AAUP,OAAO,MAAMC,kBAAkB,GAAGF,GAAG,IAAI;AACvC,MAAIA,GAAG,KAAKO,SAAZ,EAAuB;AACrB,WAAO,EAAP;AACD,GAFD,MAEO;AACL,UAAM;AAAEC,MAAAA,aAAa,GAAG;AAAlB,QAAyBR,GAA/B;;AAEA,QAAI,CAACQ,aAAL,EAAoB;AAClB,aAAO,EAAP;AACD,KAFD,MAEO,IAAI,CAACA,aAAa,CAACC,KAAnB,EAA0B;AAC/B,aAAO,EAAP;AACD;;AAED,WAAO;AAAEd,MAAAA,IAAI,EAAEa,aAAa,CAACC;AAAtB,KAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMN,kBAAkB,GAAG,MAAM;AACtC,aAAmC;AACjC,UAAMR,IAAI,GAAGe,MAAM,CAACjB,2BAAD,CAAN,IAAuC,EAApD;AACA,WAAO;AAAEE,MAAAA;AAAF,KAAP;AACD;;AACD,SAAO;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CANM;AAQT,OAAO,MAAMgB,SAAS,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMzB,KAAK,CAAC0B,IAAN,CAAW,YAAX,EAAyB;AAAEH,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAzB,CAAvB;;AACA,aAAmC;AAC/BH,IAAAA,MAAM,CAACjB,2BAAD,CAAN,GAAsCqB,IAAI,IAAI,EAA9C;AACH;AACJ,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,YAAY;AACpC,aAAmC;AACjCN,IAAAA,MAAM,CAACjB,2BAAD,CAAN,GAAsC,EAAtC;AACD;;AACD,QAAMJ,KAAK,CAAC0B,IAAN,CAAW,aAAX,CAAN;AACAzB,EAAAA,MAAM,CAAC2B,IAAP,CAAY,QAAZ;AACD,CANM;AAQP,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAM;AAAEJ,IAAAA;AAAF,MAAW,MAAMzB,KAAK,CAAC8B,GAAN,CAAU,cAAV,CAAvB;AACA,SAAOL,IAAP;AACH,CAHM","sourcesContent":["import axios from 'axios'\r\nimport Router from 'next/router';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nconst WINDOW_USER_SCRIPT_VARIABLE = '__USER__'\r\n\r\nexport const getUserScript = user => {\r\n    return `${WINDOW_USER_SCRIPT_VARIABLE} = ${JSON.stringify(user)};`;\r\n  };\r\n\r\n  export const authInitialProps = isProtectedRoute => ({ req }) => {    \r\n    const auth = req ? getServerSideToken(req) : getClientSideToken()\r\n    const user = auth.user\r\n    const isAnonymous = !user || user.type !== \"authenticated\"\r\n    if (isProtectedRoute) {\r\n      return redirectUser()\r\n    }\r\n    return { auth }\r\n  }\r\n\r\n  export const getServerSideToken = req => {\r\n    if (req === undefined) {\r\n      return {};\r\n    } else {\r\n      const { signedCookies = {} } = req;\r\n   \r\n      if (!signedCookies) {\r\n        return {};\r\n      } else if (!signedCookies.token) {\r\n        return {};\r\n      }\r\n   \r\n      return { user: signedCookies.token };\r\n    }\r\n  };\r\n\r\n  export const getClientSideToken = () => {\r\n    if (typeof window !== 'undefined') {\r\n      const user = window[WINDOW_USER_SCRIPT_VARIABLE] || {}\r\n      return { user }\r\n    }\r\n    return { user: {} }\r\n  }\r\n\r\nexport const loginUser = async (email, password) => {\r\n    const { data } = await axios.post('/api/login', { email, password })\r\n    if (typeof window !== \"undefined\") {\r\n        window[WINDOW_USER_SCRIPT_VARIABLE] = data || {}\r\n    }\r\n}\r\n\r\nexport const logoutUser = async () => {\r\n  if (typeof window !== \"undefined\") {\r\n    window[WINDOW_USER_SCRIPT_VARIABLE] = {};\r\n  }\r\n  await axios.post(\"/api/logout\");\r\n  Router.push(\"/login\");\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n    const { data } = await axios.get('/api/profile')\r\n    return data\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}