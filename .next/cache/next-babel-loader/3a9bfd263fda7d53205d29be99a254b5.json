{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { loginUser } from '../lib/auth';\nimport Router from 'next/router';\n\nconst LoginForm = () => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('Telly.Hoeger@billy.biz');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('elvis.io');\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n    loginUser(email, password).then(() => {\n      Router.push(\"/profile\");\n    }).catch(showError);\n  };\n\n  const showError = err => {\n    console.log(err);\n    const error = err.response && err.response.data || err.message;\n    setError(error);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  })), __jsx(\"div\", null, __jsx(\"input\", {\n    tpye: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value)\n  })), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"Submit\"), error && __jsx(\"div\", null, error));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["E:/Coding/next-cookie-auth/components/LoginForm.js"],"names":["React","useState","loginUser","Router","LoginForm","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","handleSubmit","e","preventDefault","then","push","catch","showError","err","console","log","response","data","message","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,wBAAD,CAAlC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACU,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMY,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEAL,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAV,IAAAA,SAAS,CAACG,KAAD,EAAQE,QAAR,CAAT,CAA2BS,IAA3B,CAAgC,MAAM;AAClCb,MAAAA,MAAM,CAACc,IAAP,CAAY,UAAZ;AACH,KAFD,EAGCC,KAHD,CAGOC,SAHP;AAIH,GAVD;;AAYA,QAAMA,SAAS,GAAGC,GAAG,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMX,KAAK,GAAGW,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACG,QAAJ,CAAaC,IAA7B,IAAqCJ,GAAG,CAACK,OAAvD;AACAf,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAJD;;AAMA,SACI;AAAM,IAAA,QAAQ,EAAEI;AAAhB,KACI,mBAAK;AAAO,IAAA,IAAI,EAAC,OAAZ;AACD,IAAA,IAAI,EAAC,OADJ;AAED,IAAA,WAAW,EAAC,OAFX;AAGD,IAAA,KAAK,EAAER,KAHN;AAID,IAAA,QAAQ,EAAES,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACY,MAAF,CAASC,KAAV;AAJtB,IAAL,CADJ,EAOI,mBAAK;AAAO,IAAA,IAAI,EAAC,UAAZ;AACJ,IAAA,IAAI,EAAC,UADD;AAEJ,IAAA,WAAW,EAAC,UAFR;AAGJ,IAAA,KAAK,EAAEpB,QAHH;AAIJ,IAAA,QAAQ,EAAEO,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV;AAJtB,IAAL,CAPJ,EAaI;AAAQ,IAAA,IAAI,EAAC;AAAb,cAbJ,EAcKlB,KAAK,IAAI,mBAAMA,KAAN,CAdd,CADJ;AAkBH,CA1CD;;AA4CA,eAAeL,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { loginUser } from '../lib/auth'\r\nimport Router from 'next/router'\r\n\r\nconst LoginForm = () => {\r\n    const [email, setEmail] = useState('Telly.Hoeger@billy.biz')\r\n    const [password, setPassword] = useState('elvis.io')\r\n    const [error, setError] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const handleSubmit = e => {        \r\n        e.preventDefault()\r\n        \r\n        setError('')\r\n        setIsLoading(true)\r\n        \r\n        loginUser(email, password).then(() => {\r\n            Router.push(\"/profile\")\r\n        })\r\n        .catch(showError)\r\n    }\r\n\r\n    const showError = err => {\r\n        console.log(err)\r\n        const error = err.response && err.response.data || err.message\r\n        setError(error)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><input type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n            /></div>\r\n            <div><input tpye=\"password\"\r\n             name=\"password\"\r\n             placeholder=\"password\"\r\n             value={password}\r\n             onChange={e => setPassword(e.target.value)}\r\n            /></div>\r\n            <button type=\"submit\">Submit</button>\r\n            {error && <div>{error}</div>}\r\n    </form>    \r\n    );\r\n};\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}